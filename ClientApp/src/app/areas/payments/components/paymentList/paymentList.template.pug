doctype html

.row.m-row--nm
    button.btn.btn-sm.btn-outline-primary.mr-2(
        type="button",
        (click)="onBackClick()"
    ) Back
    button.btn.btn-sm.btn-success.mr-2(
        (click)="onActionClick('add')"
    ) Create new

    .drodown
        button.btn.btn-sm.btn-outline-primary.dropdown-toggle#actions(
            type="button",
            data-toggle="dropdown",
            aria-haspopup="true",
            aria-expanded="false"
        ) Actions
        .dropdown-menu(
            aria-labeledby="actions"
        )
            button.dropdown-item(
                type="button",
                href="#",
                (click)="onActionClick('types')"
            ) Manage types
hr

.mb-3#filterContainer(
    data-collapsable="true"
)
    .card
        .card-header.p-0#filterHeader
            h5.mb-0
                button.btn.btn-link.collapsed(
                    data-toggle="collapse",
                    data-target="#filterBody",
                    aria-expanded="true",
                    aria-controls="filterBody"
                )
                    span.oi.oi--sm.oi-chevron-bottom.mr-1
                    | Filters
        .collapse#filterBody(
            aria-labeledby="filterHeader",
            data-parent="#filterContainer"
        )
            .card-body.p-3
                form(
                    #filtersForm="ngForm",
                    (submit)="onSubmitClick()"
                )
                    .row
                        label.col-sm-2.col-form-label-sm Payment for
                        .col-sm-2
                            select.form-control-sm.form-control#month(
                                name="month",
                                [(ngModel)]="filters.month"
                            )
                                option(
                                    *ngFor="let month of months",
                                    [ngValue]="month.id"
                                ) {{ month.name }}
                        .col-sm-2
                            select.form-control-sm.form-control#year(
                                name="year",
                                [(ngModel)]="filters.year",
                                placeholder="Year"
                            )
                                option(
                                    *ngFor="let year of years",
                                    [ngValue]="year.id"
                                ) {{ year.name }}
                    .row
                        label.col-sm-2.col-form-label-sm Payment type
                        .col-sm-3
                            select.form-control-sm.form-control#paymentType(
                                name="paymentType",
                                [(ngModel)]="filters.paymentTypeId"
                            )
                                option(
                                    *ngFor="let paymentType of (paymentTypes$ | async)",
                                    [ngValue]="paymentType.id"
                                ) {{ paymentType.name }}
                    .row
                        label.col-sm-2.col-form-label-sm Amount
                        .col-sm-3
                            select.form-control-sm.form-control(
                                (change)="onAmountFilterChanged($event.target.value)",
                                [(ngModel)]="amountFilterType",
                                [ngModelOptions]="{standalone: true}",
                            )
                                option() 
                                option(value="between") Between
                                option(value="exactly") Exactly
                        .col-sm-3(
                            *ngIf="amountFilterType == 'exactly'"
                        )
                            input.form-control.form-control-sm#exact(
                                type="number",
                                #exact="ngModel"
                                name="exact",
                                placeholder="Enter payment amount exact value",
                                [(ngModel)]="filters.amount.exact",
                            )
                        .col-sm-3(
                            *ngIf="amountFilterType == 'between'"
                        )
                            input.form-control.form-control-sm(
                                type="number",
                                name="minAmount",
                                [(ngModel)]="filters.amount.min",
                                #periodStart="ngModel",
                                placeholder="Minimum"
                            )
                        .col-sm-3(
                            *ngIf="amountFilterType == 'between'"
                        )
                            input.form-control.form-control-sm(
                                type="number",
                                name="periodEnd",
                                [(ngModel)]="filters.amount.max",
                                #periodEnd="ngModel",
                                placeholder="Maximum"
                            )

                    .btn-toolbar(
                        role="toolbar",
                        aria-label="filter buttons"
                    )
                        .btn-group.mr-2(
                            role="group",
                            aria-label="filter button"
                        )
                            button.btn.btn-primary.btn-sm(
                                type="submit"
                            ) Filter
                        .btn-group.mr-2(
                            role="group",
                            aria-label="clear filter button"
                        )
                            button.btn.btn-outline-secondary.btn-sm(
                                type="button",
                                (click)="clearFilters()"
                            ) Clear
hr
.loading-cover
    .loading-cover_image-container(
        *ngIf="isLoading"
    )
        img.loading-cover_image-container_img(
            alt="loading..",
            src="assets/images/loading-02.svg"
        )
    .loading-cover_content(
        [attr.data-disabled]="isLoading"
    )
        .payments-header(
            *ngIf="hasData"
        )
            .payments-header__year.payments-header--clickable(
                [class.payments-header--filter-column]="currentSortColumn === 'year'"
            )
                span.oi.oi-chevron-bottom(
                    *ngIf="currentSortColumn === 'year'",
                    [class.oi--rotated]="isDescSortOrder",
                    (click)="onSortColumn('year')"
                )
                span(
                    (click)="onSortColumn('year')"
                ) Year
            .payments-header__month.payments-header--clickable(
                [class.payments-header--filter-column]="currentSortColumn === 'month'"
            )
                span.oi.oi-chevron-bottom(
                    *ngIf="currentSortColumn === 'month'",
                    [class.oi--rotated]="isDescSortOrder",
                    (click)="onSortColumn('month')"
                )
                span(
                    (click)="onSortColumn('month')"
                ) Month
            .payments-header__type.payments-header--clickable(
                [class.payments-header--filter-column]="currentSortColumn === 'type'"
            )
                span.oi.oi-chevron-bottom(
                    *ngIf="currentSortColumn === 'type'",
                    [class.oi--rotated]="isDescSortOrder",
                    (click)="onSortColumn('type')"
                )
                span(
                    (click)="onSortColumn('type')"
                ) Type
            .payments-header__value.payments-header--clickable(
                [class.payments-header--filter-column]="currentSortColumn === 'value'"
            )
                span.oi.oi-chevron-bottom(
                    *ngIf="currentSortColumn === 'value'",
                    [class.oi--rotated]="isDescSortOrder",
                    (click)="onSortColumn('value')"
                )
                span(
                    (click)="onSortColumn('value')"
                ) Amount
            .payments-header__comment
                span Comment
            .payments-header__actions
                span Actions
        app-payment-item(
            *ngFor="let payment of (payments$ | async)",
            [payment]="payment",
            (deleteClick)="onDeleteRecordClick($event)",
            (editClick)="onEditRecordClick($event)",
            (typeClick)="onTypeClick($event)"
        )

        br
        app-paginator(
            *ngIf="paginatorConfig?.enabled",
            [pagesCount]="paginatorConfig?.pagesCount",
            (pageChange)="onPageChange($event)"
        )
        app-no-items(*ngIf="!hasData && !isLoading")