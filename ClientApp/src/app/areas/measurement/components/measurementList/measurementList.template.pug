doctype html

.row.m-row--nm
    button.btn.btn-sm.btn-outline-primary.mr-2(
        type='button',
        (click)='onBackClick()'
    ) Back
    button.btn.btn-sm.btn-success.mr-2(
        (click)='onActionClick(\'add\')'
    ) Create new

    .drodown
        button.btn.btn-sm.btn-outline-primary.dropdown-toggle#measurementActions(
            type='button',
            data-toggle='dropdown',
            aria-haspopup='true',
            aria-expanded='false'
        ) Actions
        .dropdown-menu(
            aria-labeledby='measurementActions'
        )
            button.dropdown-item(
                type='button',
                href='#',
                (click)='onActionClick(\'types\')'
            ) Manage types
            button.dropdown-item(
                type='button',
                href='#',
                *ngIf='!isMeasurementsSentFlagActive',
                (click)='onSelectMeasurementsClick(true)',
                [disabled]='!hasData'
            ) Send
            button.dropdown-item(
                type='button',
                href='#',
                *ngIf='isMeasurementsSentFlagActive',
                (click)='onSendMeasurementsClick()',
                [disabled]='!isAnyMeasurementSelectedToSend'
            )
                span.spinner-grow.spinner-grow-sm.mr-1(
                    *ngIf='isMeasurementsSentFlagActive && isLoading'
                    role='status',
                    aria-hidden='true'
                )
                | Send {{ selectedMeasurementsCount }}
            .dropdown-divider(*ngIf='isMeasurementsSentFlagActive')
            button.dropdown-item(
                type='button',
                href='#',
                *ngIf='isMeasurementsSentFlagActive',
                (click)='onSelectMeasurementsClick(false)'
            ) Cancel

hr

.mb-3#filterContainer(data-collapsable='true')
    .card
        .card-header.p-0#filterHeader
            h5.mb-0
                button.btn.btn-link.collapsed(
                    data-toggle='collapse',
                    data-target='#filterBody',
                    aria-expanded='true',
                    aria-controls='filterBody'
                )
                    span.oi.oi--sm.oi-chevron-bottom.mr-1
                    | Filters
        .collapse#filterBody(
            aria-labeledby='filterHeader',
            data-parent='#filterContainer'
        )
            .card-body.p-3
                form(
                    #filtersForm='ngForm',
                    (submit)='applyFilters()'
                )
                    .row
                        label.col-sm-2.col-form-label-sm Measurement for
                        .col-sm-2
                            select.form-control-sm.form-control#month(
                                name='month',
                                [(ngModel)]='filters.month'
                            )
                                option(
                                    *ngFor='let month of months',
                                    [ngValue]='month.id'
                                ) {{ month.name }}
                        .col-sm-2
                            select.form-control-sm.form-control#year(
                                name='year',
                                [(ngModel)]='filters.year',
                                placeholder='Year'
                            )
                                option(
                                    *ngFor='let year of years',
                                    [ngValue]='year.id'
                                ) {{ year.name }}
                    .row
                        label.col-sm-2.col-form-label-sm Measurement type
                        .col-sm-3
                            select.form-control-sm.form-control#measurementType(
                                name='measurementType',
                                [(ngModel)]='filters.measurementTypeId'
                            )
                                option(
                                    *ngFor='let measurementType of measurementTypes',
                                    [ngValue]='measurementType.id'
                                ) {{ measurementType.name }}
                    .btn-toolbar(
                        role='toolbar',
                        aria-label='filter buttons'
                    )
                        .btn-group.mr-2(
                            role='group',
                            aria-label='filter button'
                        )
                            button.btn.btn-primary.btn-sm(
                                type='submit'
                            ) Filter
                        .btn-group.mr-2(
                            role='group',
                            aria-label='clear filter button'
                        )
                            button.btn.btn-outline-secondary.btn-sm(
                                type='button',
                                (click)='clearFilters()'
                            ) Clear
hr
.loading-cover
    .loading-cover_image-container(*ngIf='isLoading')
        img.loading-cover_image-container_img(
            alt='loading..',
            src='assets/images/loading-02.svg'
        )
    .loading-cover_content([attr.data-disabled]='isLoading')
        div(*ngIf='hasData')
            app-measurement-group(
                *ngFor='let measurementGroup of pageItems',
                [measurementGroup]='measurementGroup',
                [showAsGroups]='isFilterApplied',
                [isSentFlagActive]='isMeasurementsSentFlagActive',
                (deleteClick)='onDeleteRecordClick($event)',
                (editClick)='onEditRecordClick($event)',
                (typeClick)='onTypeClick($event)',
                (sendFlagClick)='onSendFlagClick($event)',
            )
            br
            app-paginator(
                *ngIf='paginatorConfig?.enabled',
                [pagesCount]='paginatorConfig?.pagesCount',
                (pageChange)='onPageChange($event)'
            )
        app-no-items(*ngIf='!hasData && !isLoading')